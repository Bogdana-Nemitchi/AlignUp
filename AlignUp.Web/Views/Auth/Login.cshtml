@model AlignUp.Domain.Model.User.UserLoginDTO
@{
    ViewBag.Title = "Login";
    Layout = null;
}

<!DOCTYPE html>
<html lang="ro">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Autentificare - AlignUp</title>

    <link href="https://fonts.googleapis.com/css2?family=Source+Sans+Pro&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="@Url.Content("~/css/bootstrap.min.css")">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">

    <style>
        :root {
            --text-color: #333;
            --dark-bg: #033E8C;
            --primary-color: #007bff;
        }
        * {
            margin: 0; padding: 0;
            box-sizing: border-box;
            font-family: 'Source Sans Pro', sans-serif;
        }
        body {
            min-height: 100vh;
            background: linear-gradient(rgba(0,0,0,0.5), rgba(0,0,0,0.5)), url('@Url.Content("~/img/hero.jpg")') no-repeat center center fixed;
            background-size: cover;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 20px;
        }
        .login-box {
            background-color: white;
            border-radius: 10px;
            box-shadow: 0 0 25px rgba(0,0,0,0.5);
            width: 100%;
            max-width: 450px;
            padding: 40px;
            animation: fadeIn 0.8s ease-in-out;
        }
        .login-header {
            text-align: center;
            margin-bottom: 30px;
        }
        .login-header h2 {
            color: var(--text-color);
            font-size: 2rem;
        }
        .login-header p {
            color: #777;
            font-size: 1rem;
        }
        .input-group {
            position: relative;
            margin-bottom: 25px;
        }
        .input-group input {
            width: 100%;
            padding: 12px 15px;
            border: 1px solid #ddd;
            border-radius: 5px;
            font-size: 16px;
            transition: all 0.3s ease;
        }
        .input-group input:focus {
            border-color: var(--primary-color);
            box-shadow: 0 0 5px rgba(0,123,255,0.5);
            outline: none;
        }
        .input-group label {
            position: absolute;
            top: 15px; left: 15px;
            color: #999;
            transition: all 0.3s ease;
            pointer-events: none;
            background: white;
            padding: 0 5px;
        }
        .input-group input:focus + label,
        .input-group input:not(:placeholder-shown) + label {
            top: -10px;
            left: 10px;
            font-size: 14px;
            color: var(--primary-color);
        }
        .options-row {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin: 15px 0 25px;
        }
        .remember-me {
            display: flex;
            align-items: center;
        }
        .remember-me input[type="checkbox"] {
            margin-right: 8px;
        }
        .forgot-password {
            color: var(--primary-color);
            text-decoration: none;
            font-size: 14px;
        }
        .forgot-password:hover {
            text-decoration: underline;
            color: var(--dark-bg);
        }
        .btn-login {
            width: 100%;
            padding: 12px;
            background-color: var(--primary-color);
            color: white;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            font-weight: bold;
            transition: background 0.3s;
        }
        .btn-login:hover {
            background-color: var(--dark-bg);
        }
        .register-link {
            text-align: center;
            margin-top: 25px;
        }
        .register-link a {
            color: var(--primary-color);
            text-decoration: none;
            font-weight: bold;
        }
        .register-link a:hover {
            text-decoration: underline;
            color: var(--dark-bg);
        }
        .error-message {
            background-color: #f8d7da;
            color: #721c24;
            padding: 10px;
            border-radius: 5px;
            margin-bottom: 20px;
            text-align: center;
            border: 1px solid #f5c6cb;
        }
        .text-danger {
            color: #dc3545;
            font-size: 0.875em;
        }
        .back-to-home-link {
            display: block;
            text-align: center;
            margin-top: 20px;
            color: var(--primary-color);
            font-size: 14px;
        }
        .back-to-home-link:hover {
            color: var(--dark-bg);
            text-decoration: underline;
        }
        @@keyframes fadeIn {
            from { opacity: 0; transform: translateY(20px); }
            to { opacity: 1; transform: translateY(0); }
        }
    </style>
</head>
<body>
    <div class="login-box">
        <div class="login-header">
            <h2>Autentificare</h2>
            <p>Accesează contul tău</p>
        </div>

        @if (ViewBag.Error != null)
        {
            <div class="error-message">
                <i class="fas fa-exclamation-circle"></i> @ViewBag.Error
            </div>
        }

        @Html.ValidationSummary(true, "", new { @class = "error-message" })

        @using (Html.BeginForm("Auth", "Auth", FormMethod.Post, new { id = "loginForm" }))
        {
            @Html.AntiForgeryToken()

            <div class="input-group">
                @Html.TextBoxFor(m => m.Username, new { required = "required", autocomplete = "username", placeholder = " " })
                @Html.LabelFor(m => m.Username, "Nume utilizator")
                @Html.ValidationMessageFor(m => m.Username, "", new { @class = "text-danger" })
            </div>

            <div class="input-group">
                @Html.PasswordFor(m => m.Password, new { required = "required", autocomplete = "current-password", placeholder = " " })
                @Html.LabelFor(m => m.Password, "Parolă")
                @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
            </div>

            <button type="submit" class="btn-login">
                <i class="fas fa-sign-in-alt"></i> Autentifică-te
            </button>

            <div class="register-link">
                <p>Nu ai cont? <a href="@Url.Action("Register", "Auth")">Înregistrează-te</a></p>
            </div>
        }

        <a href="@Url.Action("Index", "Home")" class="back-to-home-link">
            <i class="fas fa-arrow-left"></i> Înapoi la pagina principală
        </a>
    </div>

    <script src="@Url.Content("~/js/jquery-3.4.1.min.js")"></script>
    <script>
        $(document).ready(function () {
            $('#Username').focus();

            function setLabelActive(inputElement) {
                var $input = $(inputElement);
                var $label = $input.siblings('label');
                if ($input.val() !== '' && $input.attr('placeholder') === ' ') {
                    $label.addClass('active-label-float');
                } else {
                    $label.removeClass('active-label-float');
                }
            }

            $('.input-group input[placeholder=" "]').each(function () {
                setLabelActive(this);
            }).on('input focus', function () {
                $(this).siblings('label').addClass('active-label-float');
            }).on('blur', function () {
                if ($(this).val() === '') {
                    $(this).siblings('label').removeClass('active-label-float');
                }
            });
        });
    </script>
</body>
</html>
